Andy Lin
SoftDev
K36 -- MongoDB using the shell and data explorer, file types
2022-05-03
time spent: 1

how does mongodb store data:
data stored in json

json:
start and end w curly braces
seperate each key and value with colon
seperate each pair with comma
keys (or fields in mongodb) in quotes
can nest documents in mongodb
good for when you need to export to a local machine to read it

pros of json:
friendly, readable, familiar

cons of json:
text based, space consuming, limited data type support

bson:
binary json
compresses json data down to try and fix space consuming issue
good for speed, space, and flexibility
general purpose focus
mongodb stores data in this format
json still be stored and retrieved in mongodb
good for cases when it needs to be backed up to the cloud or exported to a diff system

cmds:
mongodump --uri "<cluster uri>" dumps bson somewhere
mongoexport --uri "<cluster uri>" --collection=<collection name> --out=<filename>.json can export files as some readable thing
mongorestore --uri "<cluster uri>" --drop dump to import a bson dump
mongoimport --uri "<cluster uri>" --drop=<filename>.json import data in json (can also use csv and other popular data storage formats)
(should use --drop dump for mongorestore and mongoimport)
--collection <databasename> flag will allow you to import the database file and set the collection name to something

uri string: uniform resource identifier
srv - establishes a secure connection
in our case, this is to pass the user and password through which the next part can then be used to direct to our cluster and database
ex: mongodb+srv://user:password@clusterURI.mongodb.net/database
if database not specified in the uri, then the database name used will be test

data explorer
namespace: collection name and database name together
allows us to interact with documents in different ways
queries:
json format, but only for what you want to match
returns documents where there are matches for the field value pairs

find cmd:
first connect (connection details in the atlas panel)
show dbs show all dbs in database
use <database> to select a database to look at
show collections in order to view all collections in a database
db.<collection name>.find(<json query>) to find (even works with only {} as the query, but it will return any 20)
it to find the next 20 documents with matching queries (or iterates via a cursor)
cursor is a pointer to a result set of a query
.count() at end of query command to return num of documents that match the given query
.pretty() at end of query command to prettyprint the documents that match a given query

mongo shell is a fully functioning js interpreter
